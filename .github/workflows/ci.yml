name: ci
on:
  pull_request:
  push:
jobs:
  test:
    # Don't run duplicate `push` jobs for the repo owner's PRs.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository

    runs-on: ${{ matrix.host_os }}

    strategy:
      matrix:
        features:
          - # Default

        target:
          - aarch64-apple-ios
          - aarch64-linux-android
          - aarch64-unknown-linux-gnu
          - arm-unknown-linux-gnueabihf
          - armv7-linux-androideabi
          - i686-pc-windows-msvc
          - i686-unknown-linux-gnu
          - i686-unknown-linux-musl
          - x86_64-pc-windows-gnu
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
          - x86_64-unknown-linux-musl
          - x86_64-unknown-linux-gnu

        mode:
          - # debug
          - --release

        rust_channel:
          - stable
          - beta
          - nightly

        include:
          - target: aarch64-apple-ios
            host_os: macos-latest
            # GitHub Actions doesn't have a way to run aarch64-apple-ios.
            cargo_options: --no-run

          - target: aarch64-linux-android
            host_os: ubuntu-18.04
            # TODO: https://github.com/briansmith/ring/issues/486
            cargo_options: --no-run

          - target: aarch64-unknown-linux-gnu
            host_os: ubuntu-18.04

          - target: arm-unknown-linux-gnueabihf
            host_os: ubuntu-18.04

          - target: armv7-linux-androideabi
            host_os: ubuntu-18.04
            # TODO: https://github.com/briansmith/ring/issues/838
            cargo_options: --no-run

          - target: i686-pc-windows-msvc
            host_os: windows-latest

          - target: i686-unknown-linux-gnu
            host_os: ubuntu-18.04

          - target: i686-unknown-linux-musl
            host_os: ubuntu-18.04

          - target: x86_64-pc-windows-gnu
            host_os: windows-latest

          - target: x86_64-pc-windows-msvc
            host_os: windows-latest

          - target: x86_64-apple-darwin
            host_os: macos-latest

          - target: x86_64-unknown-linux-musl
            host_os: ubuntu-18.04

          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - if: ${{ !contains(matrix.host_os, 'windows') }}
        run: mk/install-build-tools.sh --target=${{ matrix.target }} ${{ matrix.features }}

      - uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.rust_channel }}

      - if: ${{ !contains(matrix.host_os, 'windows') }}
        run: |
          PATH=${ANDROID_SDK_ROOT}/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH \
          CC_aarch64_linux_android=aarch64-linux-android21-clang \
          CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=aarch64-linux-android21-clang \
          CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc \
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUNNER="qemu-aarch64 -L /usr/aarch64-linux-gnu" \
          CC_arm_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \
          CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc \
          CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_RUNNER="qemu-arm -L /usr/arm-linux-gnueabihf" \
          CC_armv7_linux_androideabi=armv7a-linux-androideabi18-clang \
          CARGO_TARGET_ARMV7_LINUX_ANDROIDEABI_LINKER=armv7a-linux-androideabi18-clang \
          CC_i686_unknown_linux_gnu=clang \
          CARGO_TARGET_I686_UNKNOWN_LINUX_GNU_LINKER=clang \
          CC_i686_unknown_linux_musl=clang \
          CARGO_TARGET_i686_UNKNOWN_LINUX_MUSL_LINKER=clang \
          CC_x86_64_unknown_linux_musl=clang \
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=clang \
          cargo test -vv --target=${{ matrix.target }} ${{ matrix.cargo_options }} ${{ matrix.features }} ${{ matrix.mode }}

      - if: ${{ contains(matrix.host_os, 'windows') }}
        run: |
          cargo test -vv --target=${{ matrix.target }} ${{ matrix.cargo_options }} ${{ matrix.features }} ${{ matrix.mode }}
